{"version":3,"sources":["components/Test/Loader.module.css","assets/img/facebook.png","components/Instruction/Instruction.module.css","components/ProfessionDescr/ProfessionDescr.module.css","components/Home/Home.module.css","components/FormToEmail/FormToEmail.module.css","components/Result/Result.module.css","languages/ru/Home.js","components/Home/Home.jsx","components/Header/Header.jsx","pages/HomePage.jsx","languages/ru/Instruction.js","components/Instruction/Instruction.jsx","pages/InstructionPage.jsx","context/ResultContext.jsx","components/Test/AnswerButton.jsx","components/Test/Test.jsx","components/Test/Loader.jsx","services/api.js","languages/ru/Test.js","pages/TestPage.jsx","components/ProfessionDescr/ProfessionDescr.jsx","components/ButtonStartTestAgain/ButtonTryAgain.js","components/FormToEmail/FormToEmail.jsx","components/Result/Result.jsx","pages/ResultPage.jsx","components/App.jsx","serviceWorker.js","index.js","components/Header/Header.module.css","pages/TestPage.module.css","components/ButtonStartTestAgain/Button.module.css"],"names":["module","exports","ldsRing","lds-ring","__webpack_require__","p","pageWrap","instructWrap","instructImage","image","post","title","button_wrapper","button","wrapper","paragraph","titleParagraph","name_profession","tasks","btn","canvasWrap","postWrap","shareFB","inputEmail","inputSubmit","wrapper_facebook","message","pieStyle","hideOnModal","wrapperShadow","wrapHead","home","part","particles","number","value","size","shape","type","interactivity","events","onhover","enable","mode","Home","react_default","a","createElement","className","style","particles_default","params","height","window","innerHeight","width","NavLink","to","Header","link","Logo","logoTag","HomePage","components_Header_Header","components_Home_Home","instruction","partDesktop","Instructions","InstructionPage","test","Instruction","ResultContext","createContext","results","updateResults","QuestionButton","_ref","_ref$answerTitle","answerTitle","_ref$typeProfession","typeProfession","_ref$_id","_id","answerId","setAnswer","concat","activeButton","answerButton","defaultButton","name","onClick","answerVariantText","activeAnswerVariantText","answerButtonText","Test","_ref$questionTitle","questionTitle","_ref$answers","answers","questionBlock","answerBlock","map","answer","AnswerButton","Object","assign","key","Loader","axios","defaults","baseURL","headers","put","get","getFirstQuestion","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","abrupt","stop","apply","this","arguments","setResuts","_ref2","_callee2","data","_context2","_x","getUserResults","_ref3","_callee3","id","_context3","_x2","sendMail","_ref5","_callee5","_context5","_x4","error","TestPage","state","currentQuestion","errorMessage","isLoading","handleGetFirstQuestion","api","then","_this","setState","objectSpread","handleSetResults","_this$state","userAnswersId","context","resp","catch","err","console","log","handleNextQuestion","_this$state2","_this$state2$question","question","_this$state2$userAnsw","totalQuestions","length","find","el","questionNumber","prevState","props","history","replace","handlePrevQuestion","handleSetAnswer","variant","_this$state3","currentQuestionId","filteredAswers","filter","questionId","toConsumableArray","nextState","_this2","_this$state4","_this$state4$currentQ","_this$state4$question","progressPercent","Math","round","testBlock","progressBlock","countBlock","countItem","lib","percent","status","theme","success","color","symbolClassName","symbolProgress","progress","components_Test_Test","selectedAnswer","buttonBlock","buttonNav","index_es","icon","faArrowLeft","buttonNavRight","faArrowRight","Test_Loader","Component","contextType","ProfessionDescr","_ref$descriptionText","descriptionText","_ref$dutiesText","descriptionTitle","dutiesText","_ref$dutiesTitle","dutiesTitle","_ref$perspectivesText","perspectivesText","_ref$perspectivesTitl","perspectivesTitle","_ref$title","ButtonTryAgain","Link","FormToEmail","email","handelChange","sendResultOnEmail","messageFromSendEmail","onSubmit","e","onChange","placeholder","href","target","rel","src","iconFacebook","alt","options","responsive","legend","position","labels","boxWidth","padding","fontSize","Result","defineProperty","event","preventDefault","canvasImage","document","querySelector","toDataURL","_this$props$results","_this$props$results$r","result","_this$props$results$p","profession","dataPie","datasets","frontend","backend","tester","manager","backgroundColor","hoverBackgroundColor","es","prof","components_ProfessionDescr_ProfessionDescr","ButtonStartTestAgain_ButtonTryAgain","components_FormToEmail_FormToEmail","ResultPage","handleGetUserResult","match","resultsToRender","Result_Result","App","handleUpdateResults","Provider","Switch","Route","exact","path","component","withRouter","Boolean","location","hostname","ReactDOM","render","BrowserRouter","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister","loader"],"mappings":"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","file":"static/js/main.e6f96d6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRing\":\"Loader_ldsRing__3bv0F\",\"lds-ring\":\"Loader_lds-ring__3xdOb\"};","module.exports = __webpack_public_path__ + \"static/media/facebook.8f5ce275.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrap\":\"Instruction_pageWrap__3LImZ\",\"instructWrap\":\"Instruction_instructWrap__2dGT5\",\"instructImage\":\"Instruction_instructImage__3B0xo\",\"image\":\"Instruction_image__26StW\",\"post\":\"Instruction_post__1cIhg\",\"title\":\"Instruction_title__2KgwK\",\"button_wrapper\":\"Instruction_button_wrapper__2rVL5\",\"button\":\"Instruction_button__2kdpX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfessionDescr_wrapper__1FqfD\",\"paragraph\":\"ProfessionDescr_paragraph__2MI09\",\"titleParagraph\":\"ProfessionDescr_titleParagraph__2n008\",\"name_profession\":\"ProfessionDescr_name_profession__3KGAR\",\"tasks\":\"ProfessionDescr_tasks__2ProR\",\"btn\":\"ProfessionDescr_btn__39oyh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrap\":\"Home_pageWrap__1XY21\",\"canvasWrap\":\"Home_canvasWrap__1zWvP\",\"postWrap\":\"Home_postWrap__3hGcd\",\"title\":\"Home_title__3vjWs\",\"post\":\"Home_post__3x9Lh\",\"button_wrapper\":\"Home_button_wrapper__1voHo\",\"button\":\"Home_button__2M0IC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FormToEmail_wrapper__7e_JS\",\"titleParagraph\":\"FormToEmail_titleParagraph__39ypV\",\"shareFB\":\"FormToEmail_shareFB__2KzbG\",\"inputEmail\":\"FormToEmail_inputEmail__1B-b5\",\"inputSubmit\":\"FormToEmail_inputSubmit__1dHHD\",\"wrapper_facebook\":\"FormToEmail_wrapper_facebook__30Uxb\",\"message\":\"FormToEmail_message__3eCHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Result_wrapper__xTHjS\",\"btn\":\"Result_btn__3vqIY\",\"pieStyle\":\"Result_pieStyle__3AVsd\",\"hideOnModal\":\"Result_hideOnModal__76nDT\",\"wrapperShadow\":\"Result_wrapperShadow__3r84c\",\"wrapHead\":\"Result_wrapHead__3qtCy\",\"title\":\"Result_title__3DdF5\"};","export const home = {\n  title: \"Добро пожаловать в it test\",\n  post:\n    \"Откройте для ребенка идеальную карьеру с IT Test - это тест на профессиональную личность в области IT, разработанный психологами с использованием научных исследований. Наш профессиональный тест личности - 20 вопросов.\"\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Particles from \"react-particles-js\";\nimport { home } from \"../../languages/ru/Home\";\nimport style from \"./Home.module.css\";\n\nconst part = {\n  particles: {\n    number: {\n      value: 40\n    },\n    size: {\n      value: 2\n    },\n    shape: {\n      type: {\n        value: \"star\"\n      }\n    }\n  },\n  interactivity: {\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"repulse\"\n      }\n    }\n  }\n};\n\nconst Home = () => {\n  return (\n    <div className={style.pageWrap}>\n      <div className={style.canvasWrap}>\n        <Particles\n          params={part}\n          height={window.innerHeight}\n          width={window.innerHeight}\n        />\n      </div>\n      <div className={style.postWrap}>\n        <h1 className={style.title}> {home.title}</h1>\n        <p className={style.post}>{home.post}</p>\n        <NavLink to=\"/instruction\" className={style.button_wrapper}>\n          <button className={style.button}>начать тестирование</button>\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport style from \"./Header.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <div className={style.Header}>\n        <NavLink className={style.link}\n         to=\"/\">\n          <div className={style.Logo}>\n              <span className={style.logoTag}>&lt;</span>\n              <span >it</span>\n              <span className={style.logoTag}>&gt;</span>\n              <span > test </span>\n          </div>\n        </NavLink>\n    </div>\n  );\n};\n\nexport default Header;","import React from 'react';\r\nimport Home from '../components/Home/Home';\r\nimport style from './HomePage.module.css';\r\nimport Header from '../components/Header/Header';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div className={style.HomePage}>\r\n            <Header />\r\n            <Home />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;","\n\n  export const instruction = {\n    title: 'Инструкции:',\n    post: 'Ответьте на все 20 вопросов, поскольку они относятся к вашему ребенку в обычной жизни. Нет неправильных ответов. Если вы еще не определились, выберите ответ, который лучше описывает ребенка.'\n}","import React from \"react\";\nimport style from \"./Instruction.module.css\";\nimport { instruction } from \"../../languages/ru/Instruction\";\nimport { NavLink } from \"react-router-dom\";\nimport Particles from \"react-particles-js\";\n\nconst part = {\n  particles: {\n    number: {\n      value: 30\n    },\n    size: {\n      value: 2\n    }\n  },\n  interactivity: {\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"repulse\"\n      }\n    }\n  }\n};\n\nconst partDesktop = {\n  particles: {\n    number: {\n      value: 200\n    },\n    size: {\n      value: 2\n    }\n  },\n  interactivity: {\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"repulse\"\n      }\n    }\n  }\n};\nconst Instructions = () => {\n  return (\n    <div className={style.pageWrap}>\n      <div className={style.instructWrap}>\n        <div className={style.instructImage}>\n          {window.innerHeight < 768 ? (\n            <Particles params={part} className={style.image} />\n          ) : (\n            <Particles params={partDesktop} className={style.image} />\n          )}\n        </div>\n        <div className={style.post}>\n          <h1 className={style.title}> {instruction.title}</h1>\n          <p>{instruction.post}</p>\n        </div>\n\n        <NavLink to=\"/test\" className={style.button_wrapper}>\n          <button className={style.button}>перейти к вопросам</button>\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default Instructions;\n","import React from 'react';\r\nimport style from './InstructionPage.module.css';\r\nimport Instruction from '../components/Instruction/Instruction';\r\nimport Header from '../components/Header/Header';\r\n\r\nconst InstructionPage = () => {\r\n    return (\r\n        <div className={style.test}>\r\n            <Header/>\r\n            <Instruction/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InstructionPage;","import { createContext } from \"react\";\n\nexport const ResultContext = createContext({\n  results: [],\n  updateResults: () => null\n});\n","import React from \"react\";\nimport style from \"../../pages/TestPage.module.css\";\n\nconst QuestionButton = ({\n  answerTitle = \"\",\n  typeProfession = \"\",\n  _id = \"\",\n  answerId,\n  setAnswer\n}) => {\n  return (\n    <div\n      className={\n        answerId === _id\n          ? `${style.activeButton} ${style.answerButton}`\n          : `${(style.defaultButton, style.answerButton)}`\n      }\n      name={typeProfession}\n      onClick={() => setAnswer(typeProfession, _id)}\n    >\n      <div>\n        <span\n          className={\n            answerId === _id\n              ? `${style.answerVariantText} ${style.activeAnswerVariantText}`\n              : `${style.answerVariantText}`\n          }\n        >\n          {typeProfession}\n        </span>\n      </div>\n      <span className={style.answerButtonText}>{answerTitle}</span>\n    </div>\n  );\n};\n\nexport default QuestionButton;\n","import React from 'react'\nimport AnswerButton from './AnswerButton'\nimport style from '../../pages/TestPage.module.css'\n\nconst Test = ({ answerId, questionTitle = '', answers = [], setAnswer }) => {\n  return (\n    <div className={style.questionBlock}>\n      <span className={style.questionTitle}>{questionTitle}</span>\n      <div className={style.answerBlock}>\n        {answers.map(answer => (\n          <AnswerButton\n            {...answer}\n            key={answer._id}\n            setAnswer={setAnswer}\n            answerId={answerId}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Test\n","import React from \"react\";\nimport style from \"./Loader.module.css\";\n\nconst Loader = () => {\n  return (\n    <div className={style.ldsRing}>\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n  );\n};\n\nexport default Loader;\n","import axios from \"axios\";\n\n// axios.defaults.baseURL = \"http://localhost:41410/api/v1\";\naxios.defaults.baseURL = \"https://testit.co.ua/api/v1/\";\naxios.defaults.headers.put[\"Content-Type\"] = \"application/json\";\naxios.defaults.headers.get[\"Content-Type\"] = \"application/json\";\n\nexport const getFirstQuestion = async () => {\n  const response = axios.get(\"/question\");\n  return response;\n};\n\nexport const setResuts = async data => {\n  const response = axios.put(\"/answer\", data);\n  return response;\n};\n\nexport const getUserResults = async id => {\n  const response = axios.get(`/result/${id}`);\n  return response;\n};\n\nexport const getNextQuestion = async id => {\n  const response = axios.get(`/question/${id}`);\n  return response;\n};\n\nexport const sendMail = async data => {\n  const response = axios.post(`/send`, data);\n  return response;\n};\n","export const test = {\n  prev: \"Назад\",\n  next: \"Следующий\",\n  results: \"Результаты\",\n  error: \"Выберите вариант ответа!\"\n};\n","import React, { Component } from \"react\";\n//libs\nimport { Progress } from \"react-sweet-progress\";\nimport { ResultContext } from \"../context/ResultContext\";\n//components\nimport Test from \"../components/Test/Test\";\nimport Loader from \"../components/Test/Loader\";\n//services\nimport * as api from \"../services/api\";\n//language\nimport { test } from \"../languages/ru/Test\";\n//style , icons\nimport \"react-sweet-progress/lib/style.css\";\nimport style from \"./TestPage.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowRight, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport Header from '../components/Header/Header';\n\nclass TestPage extends Component {\n  static contextType = ResultContext;\n\n  state = {\n    currentQuestion: 1,\n    answers: [],\n    errorMessage: \"\",\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.handleGetFirstQuestion();\n  }\n\n  handleGetFirstQuestion = () => {\n    api.getFirstQuestion().then(({ data }) => {\n      this.setState({\n        ...data,\n        isLoading: true\n      });\n    });\n  };\n\n  handleSetResults = () => {\n    const { answers, userAnswersId } = this.state;\n    const { updateResults } = this.context;\n\n    api\n      .setResuts({ answers, userAnswersId })\n      .then(resp => updateResults(resp.data))\n      .catch(err => console.log(err));\n  };\n\n  handleNextQuestion = () => {\n    const { currentQuestion, question = [], userAnswersId = \"\" } = this.state;\n\n    const totalQuestions = question.length;\n\n    const isSelectedAnswer = question.find(\n      el => el.questionNumber === currentQuestion\n    );\n\n    if (!isSelectedAnswer.answerId) {\n      this.setState({\n        errorMessage: test.error\n      });\n      return;\n    }\n\n    this.setState(prevState => {\n      return {\n        currentQuestion: prevState.currentQuestion + 1,\n        errorMessage: \"\"\n      };\n    });\n\n    if (currentQuestion === totalQuestions) {\n      this.handleSetResults();\n      this.props.history.replace(`/result/${userAnswersId}`);\n    }\n  };\n\n  handlePrevQuestion = () => {\n    this.setState(prevState => {\n      return {\n        currentQuestion: prevState.currentQuestion - 1,\n        errorMessage: \"\"\n      };\n    });\n  };\n\n  handleSetAnswer = (variant, id) => {\n    const { currentQuestion, question } = this.state;\n    const currentQuestionId = question.find(\n      el => el.questionNumber === currentQuestion\n    )._id;\n    this.setState(prevState => {\n      const filteredAswers = prevState.answers.filter(\n        el => el.questionId !== currentQuestionId\n      );\n\n      prevState.answers = [\n        ...filteredAswers,\n        { questionId: currentQuestionId, typeProfession: variant }\n      ];\n      const nextState = { ...prevState };\n\n      prevState.question.map(el =>\n        el._id === currentQuestionId ? (el.answerId = id) : false\n      );\n\n      return nextState;\n    });\n  };\n\n  render() {\n    const {\n      currentQuestion = 1,\n      question = [],\n      errorMessage,\n      isLoading\n    } = this.state;\n\n    const totalQuestions = question.length;\n\n    const progressPercent =\n      currentQuestion <= totalQuestions\n        ? Math.round((currentQuestion / totalQuestions) * 100)\n        : 100;\n\n    return (\n      <div className={style.wrapper}>\n        <Header />\n        {!isLoading ? (\n          <Loader />\n        ) : (\n            <div className={style.testBlock}>\n              <div className={style.progressBlock}>\n                <div className={style.countBlock}>\n                  <span className={style.countItem}>\n                    {currentQuestion} / {totalQuestions}\n                  </span>\n                </div>\n                <Progress\n                  percent={progressPercent}\n                  status=\"success\"\n                  theme={{\n                    success: {\n                      color: \"#f5a623\"\n                    }\n                  }}\n                  symbolClassName={style.symbolProgress}\n                  className={style.progress}\n                />\n              </div>\n\n              {errorMessage && (\n                <p className={style.errorMessage}>{errorMessage}</p>\n              )}\n              {question.map(\n                el =>\n                  el.questionNumber === currentQuestion && (\n                    <Test\n                      {...el}\n                      selectedAnswer={el.answerId}\n                      key={el._id}\n                      setAnswer={this.handleSetAnswer}\n                    />\n                  )\n              )}\n              <div className={style.buttonBlock}>\n                {currentQuestion > 1 && (\n                  <button\n                    type=\"button\"\n                    onClick={() => this.handlePrevQuestion()}\n                    className={style.buttonNav}\n                  >\n                    <span>\n                      <FontAwesomeIcon icon={faArrowLeft} /> {test.prev}\n                    </span>\n                  </button>\n                )}\n                <button\n                  type=\"button\"\n                  onClick={() => this.handleNextQuestion()}\n                  className={`${style.buttonNav} ${style.buttonNavRight}`}\n                >\n                  {currentQuestion !== totalQuestions ? test.next : test.results}\n                  &#8194;<FontAwesomeIcon icon={faArrowRight} />\n                </button>\n              </div>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default TestPage;","import React from 'react';\nimport style from './ProfessionDescr.module.css';\n\nconst ProfessionDescr = ({descriptionText = \"\", descriptionTitle = \"\", dutiesText = \"\" , dutiesTitle = \"\", perspectivesText = \"\" , perspectivesTitle = \"\", title = \"\", typeProfession = \"\", }) => {\n    return (\n        <div className={style.wrapper}>\n            <h2 className={style.name_profession}> {title} </h2>\n            <h4 className={style.titleParagraph}> Описание </h4>\n            <p className={style.paragraph}>{descriptionText}</p>\n\n            <h4 className={style.titleParagraph}> {dutiesTitle} </h4>\n            <p className={style.paragraph}>{dutiesText}</p>\n\n            <h4 className={style.titleParagraph}> {perspectivesTitle} </h4>\n            <p className={style.paragraph}>{perspectivesText}</p>\n        </div>\n    );\n};\n\nexport default ProfessionDescr;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport style from './Button.module.css';\n\nconst ButtonTryAgain = () => {\n    return (\n        <div className={style.wrapper}>\n           <Link to='/test' className={style.btn}> Начать тестирование заново </Link>\n        </div>\n    );\n};\nexport default ButtonTryAgain;","import React from 'react';\nimport iconFacebook from '../../assets/img/facebook.png';\nimport style from './FormToEmail.module.css';\nconst title = ['Отправить результат на почту'];\n\nconst FormToEmail = ({ email, handelChange, sendResultOnEmail, messageFromSendEmail }) => {\n    return (\n        <div className={style.wrapper}>\n            <h1 className={style.titleParagraph}>{title}</h1>\n            <form className={style.shareFB} onSubmit={(e) => sendResultOnEmail(e)}>\n                <input onChange={handelChange} name=\"email\" value={email} className={style.inputEmail} type='email' placeholder='Email' />\n                <button className={style.inputSubmit} type='submit'>&#10148;</button>\n            </form>\n            {messageFromSendEmail ? <p className={style.message}>{messageFromSendEmail}</p> : null}\n            <div className={style.wrapper_facebook}>\n                <a href='https://www.facebook.com/GoITeens/' target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src={iconFacebook} alt=\" Favebook \" width='35' height='35' />\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport default FormToEmail;","import React, { Component } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport ProfessionDescr from '../ProfessionDescr/ProfessionDescr';\nimport ButtonTryAgain from '../ButtonStartTestAgain/ButtonTryAgain';\nimport FormToEmail from '../FormToEmail/FormToEmail';\nimport Particles from \"react-particles-js\";\nimport * as api from '../../services/api.js'\nimport style from './Result.module.css';\n\n// const part = {\n//   particles: {\n//     number: {\n//       value: 10\n//     },\n//     size: {\n//       value: 1\n//     }\n//   },\n//   interactivity: {\n//     events: {\n//       onhover: {\n//         enable: true,\n//         mode: \"repulse\"\n//       }\n//     }\n//   },\n//   style: {\n//     height: '7rem'\n//   }\n// };\n\nconst options = {\n  responsive: true,\n  legend: {\n    position: \"bottom\",\n    labels: {\n      boxWidth: 20,\n      padding: 10,\n      fontSize: 16\n    }\n  }\n};\n\n // for testing\n const res =\n {\n   result: {\n     tester: 60,\n     frontend: 30,\n     backend: 5,\n     manager: 5\n   },\n   profession: [\n     {\n       _id: \"5c6872176ad71a1e451fb3f1\",\n       typeProfession: \"tester\",\n       title: \"ТЕСТИРОВЩИК\",\n       descriptionTitle: \"Описание профессии\",\n       descriptionText: \"В круг задач тестировщика программного обеспечения входит формирование стратегии проверки, создание тест-кейсов и тест-дизайна, репорт ошибок в случае их выявления, работа с документацией написание подробного отчета о процессе с указанием причин и обстоятельств возникших проблем.\",\n       \"dutiesTitle\": \"Обязанности\",\n       \"dutiesText\": \"В идеале испытатель ПО - это сотрудник, участвующий в разрешении технических проблем, связанных с разработкой софта, а не только обнаруживающий их. Это исследователь и инженер, задействованный во всех этапах жизненного цикла проекта.\",\n       \"perspectivesTitle\": \"Перспективы профессии\",\n       \"perspectivesText\": \"На сегодняшний день часть процессов тестирования ПО уже автоматизируется и отдается на аутсорсинг искусственному интеллекту.\",\n       createdAt: \"2019-02-16T20:27:03.307Z\",\n       updatedAt: \"2019-02-16T20:27:03.307Z\",\n       \"__v\": 0\n     },\n   ]\n }; \n\nexport default class Result extends Component {\n\n  state = {\n    email: '',\n    messageFromSendEmail: '',\n  };\n\n  handelChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  };\n\n  sendResultOnEmail = (event) => {\n    event.preventDefault();\n    // event.stopPropagation();\n    const canvas = document.querySelector('canvas');\n    const canvasImage = canvas.toDataURL(\"image/png\");\n    const { email } = this.state;\n    const { userAnswersId } = this.props;\n    api\n      .sendMail({ email: email, userAnswersId: userAnswersId, image: canvasImage })\n      .then(resp => {\n        console.log('resp', resp);\n        this.setState({\n        messageFromSendEmail: resp.data.message,\n        email: '',\n      }) \n    })\n      \n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { result = {}, profession = [] } = this.props.results;\n    // const { result = {}, profession = []} = res;\n    const dataPie = {\n      labels: [\"FRONT-END\", \"BACK-END\", \"QA\", \"MANAGER\"],\n      datasets: [\n        {\n          data: [\n            result.frontend,\n            result.backend,\n            result.tester,\n            result.manager\n          ],\n          backgroundColor: [\"#75ffff\", \"#a44deb\", \"#f5a623\", \"#f3a82d51\"],\n          hoverBackgroundColor: [\"#75ffff\", \"#a44deb\", \"#f5a623\", \"#f3a82d51\"]\n        }\n      ]\n    };\n\n    return (\n      <div className={style.wrapper}>\n\n        <div className={style.wrapperShadow}>\n\n          <div className={style.wrapHead}>\n            {/* <div className={style.canvasWrap}>\n              <Particles params={part} />\n            </div> */}\n              <h2 className={style.title}> \n                Результаты&#8194;  \n                <span className={style.hideOnModal}> тестирования</span>\n              </h2>\n          </div>\n\n          <div className={style.pieStyle}>\n            <Pie data={dataPie} options={options} />\n          </div>\n\n        </div>\n\n        {profession.map(prof => <ProfessionDescr key=\"prof._id\" {...prof} />)}\n        <ButtonTryAgain />\n        <FormToEmail messageFromSendEmail={this.state.messageFromSendEmail} sendResultOnEmail={this.sendResultOnEmail} email={this.state.email} handelChange={this.handelChange} />\n\n      </div>\n    );\n  }\n};","import React, {Component} from 'react';\nimport Result from '../components/Result/Result';\nimport { ResultContext } from '../context/ResultContext';\nimport Header from '../components/Header/Header';\nimport * as api from '../services/api';\nimport style from './ResultPage.module.css';\n\nclass ResultPage extends Component {\n  static contextType = ResultContext;\n\n  handleGetUserResult = () => {\n    const {\n      match: {\n        params: { id }\n      }\n    } = this.props\n\n    api\n      .getUserResults(id)\n      .then(({ data }) => {\n        if (data.results) {\n          this.setState(data.results)\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  componentDidMount () {\n    this.handleGetUserResult()\n  }\n\n  render () {\n    const { results } = this.context;\n\n    const resultsToRender = results.result ? results : this.state;\n\n    return (\n      <div className={style.test}>\n        <Header/>\n        {resultsToRender && <Result userAnswersId={this.props.match.params.id} results={resultsToRender} />}\n      </div>\n    )\n  }\n}\n\nexport default ResultPage\n","import React, { Component } from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport HomePage from \"../pages/HomePage\";\nimport InstructionPage from \"../pages/InstructionPage\";\nimport TestPage from \"../pages/TestPage\";\nimport ResultPage from \"../pages/ResultPage\";\nimport style from \"./App.module.css\";\nimport { ResultContext } from \"../context/ResultContext\";\n\nclass App extends Component {\n\n  state = {\n    results: {}\n  };\n\n  handleUpdateResults = results => {\n    this.setState({\n      results\n    });\n  };\n\n  render() {\n    const { results } = this.state;\n    return (\n      <div className={style.App}>\n        <ResultContext.Provider\n          value={{ results, updateResults: this.handleUpdateResults }}\n        >\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/instruction\" component={InstructionPage} />\n            <Route path=\"/test\" component={TestPage} />\n            <Route path=\"/result/:id\" component={ResultPage} />\n            <Route path=\"/result\" component={ResultPage} />\n          </Switch>\n        </ResultContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__JR27H\",\"link\":\"Header_link__1IVjC\",\"Logo\":\"Header_Logo__1PmxA\",\"logoTag\":\"Header_logoTag__3XTF3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"TestPage_loader__3SrM4\",\"wrapper\":\"TestPage_wrapper__W7ENL\",\"testBlock\":\"TestPage_testBlock__2Kz03\",\"countBlock\":\"TestPage_countBlock__2j5gq\",\"countItem\":\"TestPage_countItem__pu49y\",\"progress\":\"TestPage_progress__lZ8RI\",\"errorMessage\":\"TestPage_errorMessage__3nwrW\",\"questionTitle\":\"TestPage_questionTitle__3EsRl\",\"answerButton\":\"TestPage_answerButton__3t7GK\",\"answerVariantText\":\"TestPage_answerVariantText__BSWlD\",\"activeAnswerVariantText\":\"TestPage_activeAnswerVariantText__5AUI9\",\"answerButtonText\":\"TestPage_answerButtonText__3Fh8F\",\"activeButton\":\"TestPage_activeButton__2tFhu\",\"buttonBlock\":\"TestPage_buttonBlock__2NryR\",\"buttonNav\":\"TestPage_buttonNav__RkIRO\",\"buttonNavRight\":\"TestPage_buttonNavRight__1OWNT\",\"progressBlock\":\"TestPage_progressBlock__3ZV9d\",\"symbolProgress\":\"TestPage_symbolProgress__cmNu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Button_wrapper__3f-dx\",\"btn\":\"Button_btn__1qJ2x\"};"],"sourceRoot":""}